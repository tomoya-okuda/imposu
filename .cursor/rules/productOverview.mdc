---
description: 
globs: 
alwaysApply: true
---
# 技術スタック定義書：imposu.com

## フロントエンド

### **Next.js 15**
- 最新の **App Router** を活用し、**React Server Components** を導入。
- これにより、パフォーマンスの向上と開発効率の改善を実現。

### **TypeScript**
- 静的型付けにより、コードの安全性と可読性を高める。

---

## 認証

### **Auth.js v5**
- 柔軟な認証フローを構築可能。
- セキュリティとユーザーエクスペリエンスの向上に寄与。

### **Email Provider: Forward Email**
- メールベースの認証を実現。
- ユーザー登録やパスワードリセット機能を提供。

---

## バックエンド

### **Google Cloud Run**
- コンテナ化されたアプリケーションをスケーラブルにデプロイ。
- 柔軟なリソース管理を可能にする。

### **Google Cloud SQL**
- マネージドなデータベースサービスを利用し、信頼性とスケーラビリティを確保。

### **Cloud SQL Proxy**
- セキュアな接続を簡素化し、接続管理を容易にする。

### **PostgreSQL**
- 信頼性の高いリレーショナルデータベース。
- データの整合性とパフォーマンスを提供。

### **Prisma**
- モダンなORMとして、データベース操作を型安全かつ効率的に行う。

---

## 決済

### **Stripe**
- **0.4% の手数料** で請求書発行を可能にする。
- コスト効率の高い決済ソリューションを提供。

---

## スタイリング

### **Chakra UI V3**
- 高度なスタイル定義を可能にする。
- デザインの一貫性と保守性を高める。

---

## その他

### **"use client" ディレクティブ**
- Next.js でクライアントコンポーネントを明示的に指定。
- クライアントサイドでのレンダリングを制御。

### **useRouter のインポート**
- `next/navigation` からのインポートを徹底。
- 最新の Next.js の機能を活用。

